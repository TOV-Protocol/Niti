
//! Autogenerated weights for `pallet_distance`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-22, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `bgallois-ms7d43`, CPU: `12th Gen Intel(R) Core(TM) i3-12100F`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/duniter
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --pallet
// *
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output=runtime/common/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_distance`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_distance::WeightInfo for WeightInfo<T> {
	/// Storage: Identity IdentityIndexOf (r:1 w:0)
	/// Proof Skipped: Identity IdentityIndexOf (max_values: None, max_size: None, mode: Measured)
	/// Storage: Distance IdentityDistanceStatus (r:1 w:1)
	/// Proof Skipped: Distance IdentityDistanceStatus (max_values: None, max_size: None, mode: Measured)
	/// Storage: Session CurrentIndex (r:1 w:0)
	/// Proof Skipped: Session CurrentIndex (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Distance EvaluationPool2 (r:1 w:1)
	/// Proof Skipped: Distance EvaluationPool2 (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(126), added: 2601, mode: MaxEncodedLen)
	/// Storage: Distance DistanceStatusExpireOn (r:1 w:1)
	/// Proof Skipped: Distance DistanceStatusExpireOn (max_values: None, max_size: None, mode: Measured)
	fn request_distance_evaluation() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `940`
		//  Estimated: `4405`
		// Minimum execution time: 15_424_000 picoseconds.
		Weight::from_parts(16_307_000, 0)
			.saturating_add(Weight::from_parts(0, 4405))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: Distance DidUpdate (r:1 w:1)
	/// Proof Skipped: Distance DidUpdate (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Authorship Author (r:1 w:1)
	/// Proof: Authorship Author (max_values: Some(1), max_size: Some(32), added: 527, mode: MaxEncodedLen)
	/// Storage: System Digest (r:1 w:0)
	/// Proof Skipped: System Digest (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Session Validators (r:1 w:0)
	/// Proof Skipped: Session Validators (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Session CurrentIndex (r:1 w:0)
	/// Proof Skipped: Session CurrentIndex (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Distance EvaluationPool0 (r:1 w:1)
	/// Proof Skipped: Distance EvaluationPool0 (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `i` is `[1, 600]`.
	fn update_evaluation(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `773 + i * (10 ±0)`
		//  Estimated: `2257 + i * (10 ±0)`
		// Minimum execution time: 11_050_000 picoseconds.
		Weight::from_parts(12_621_290, 0)
			.saturating_add(Weight::from_parts(0, 2257))
			// Standard Error: 145
			.saturating_add(Weight::from_parts(59_121, 0).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(6))
			.saturating_add(T::DbWeight::get().writes(3))
			.saturating_add(Weight::from_parts(0, 10).saturating_mul(i.into()))
	}
	/// Storage: Session CurrentIndex (r:1 w:0)
	/// Proof Skipped: Session CurrentIndex (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Distance EvaluationPool0 (r:1 w:1)
	/// Proof Skipped: Distance EvaluationPool0 (max_values: Some(1), max_size: None, mode: Measured)
	/// The range of component `i` is `[1, 600]`.
	fn force_update_evaluation(i: u32, ) -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `612 + i * (10 ±0)`
		//  Estimated: `2096 + i * (10 ±0)`
		// Minimum execution time: 5_197_000 picoseconds.
		Weight::from_parts(6_485_670, 0)
			.saturating_add(Weight::from_parts(0, 2096))
			// Standard Error: 119
			.saturating_add(Weight::from_parts(58_163, 0).saturating_mul(i.into()))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(1))
			.saturating_add(Weight::from_parts(0, 10).saturating_mul(i.into()))
	}
	/// Storage: Session CurrentIndex (r:1 w:0)
	/// Proof Skipped: Session CurrentIndex (max_values: Some(1), max_size: None, mode: Measured)
	/// Storage: Distance DistanceStatusExpireOn (r:1 w:1)
	/// Proof Skipped: Distance DistanceStatusExpireOn (max_values: None, max_size: None, mode: Measured)
	/// Storage: Distance IdentityDistanceStatus (r:0 w:1)
	/// Proof Skipped: Distance IdentityDistanceStatus (max_values: None, max_size: None, mode: Measured)
	fn force_set_distance_status() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `586`
		//  Estimated: `4051`
		// Minimum execution time: 4_930_000 picoseconds.
		Weight::from_parts(5_069_000, 0)
			.saturating_add(Weight::from_parts(0, 4051))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: Distance DidUpdate (r:1 w:1)
	/// Proof Skipped: Distance DidUpdate (max_values: Some(1), max_size: None, mode: Measured)
	fn on_finalize() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `170`
		//  Estimated: `1655`
		// Minimum execution time: 3_156_000 picoseconds.
		Weight::from_parts(3_382_000, 0)
			.saturating_add(Weight::from_parts(0, 1655))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
}
