
//! Autogenerated weights for `pallet_oneshot_account`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-22, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `bgallois-ms7d43`, CPU: `12th Gen Intel(R) Core(TM) i3-12100F`
//! EXECUTION: None, WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/duniter
// benchmark
// pallet
// --chain
// dev
// --wasm-execution=compiled
// --pallet
// *
// --extrinsic
// *
// --steps
// 50
// --repeat
// 20
// --output=runtime/common/src/weights/

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_oneshot_account`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_oneshot_account::WeightInfo for WeightInfo<T> {
	/// Storage: OneshotAccount OneshotAccounts (r:1 w:1)
	/// Proof Skipped: OneshotAccount OneshotAccounts (max_values: None, max_size: None, mode: Measured)
	fn create_oneshot_account() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `42`
		//  Estimated: `3507`
		// Minimum execution time: 8_463_000 picoseconds.
		Weight::from_parts(8_912_000, 0)
			.saturating_add(Weight::from_parts(0, 3507))
			.saturating_add(T::DbWeight::get().reads(1))
			.saturating_add(T::DbWeight::get().writes(1))
	}
	/// Storage: OneshotAccount OneshotAccounts (r:1 w:1)
	/// Proof Skipped: OneshotAccount OneshotAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: System BlockHash (r:1 w:0)
	/// Proof: System BlockHash (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: System Account (r:1 w:1)
	/// Proof: System Account (max_values: None, max_size: Some(126), added: 2601, mode: MaxEncodedLen)
	fn consume_oneshot_account() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `242`
		//  Estimated: `3707`
		// Minimum execution time: 12_830_000 picoseconds.
		Weight::from_parts(13_808_000, 0)
			.saturating_add(Weight::from_parts(0, 3707))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: OneshotAccount OneshotAccounts (r:1 w:1)
	/// Proof Skipped: OneshotAccount OneshotAccounts (max_values: None, max_size: None, mode: Measured)
	/// Storage: System BlockHash (r:1 w:0)
	/// Proof: System BlockHash (max_values: None, max_size: Some(44), added: 2519, mode: MaxEncodedLen)
	/// Storage: System Account (r:2 w:2)
	/// Proof: System Account (max_values: None, max_size: Some(126), added: 2601, mode: MaxEncodedLen)
	fn consume_oneshot_account_with_remaining() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `306`
		//  Estimated: `6192`
		// Minimum execution time: 17_370_000 picoseconds.
		Weight::from_parts(18_278_000, 0)
			.saturating_add(Weight::from_parts(0, 6192))
			.saturating_add(T::DbWeight::get().reads(4))
			.saturating_add(T::DbWeight::get().writes(3))
	}
}
